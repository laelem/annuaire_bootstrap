<?php/** * Drop-down Menu * * Ici, on simule l'utilisation de set_select en allant chercher les valeurs postées * En effet, de par leur fonctionnement, form_dropdown ne peut pas être utilisé en même temps que set_select * Il suffit donc juste de renseigner les valeurs par défaut en 3ème paramètre * * @access	public * @param	string * @param	array * @param	string * @param	string * @return	string */if ( ! function_exists('form_dropdown')){	function form_dropdown($name = '', $options = array(), $selected = array(), $extra = '')	{		if ( ! is_array($selected))		{			$selected = array($selected);		}		// If no selected state was submitted we will attempt to set it automatically		if (count($selected) === 0)		{			// If the form name appears in the $_POST array we have a winner!			if (isset($_POST[$name]))			{				$selected = array($_POST[$name]);			}		}		if ($extra != '') $extra = ' '.$extra;		$multiple = (count($selected) > 1 && strpos($extra, 'multiple') === FALSE) ? ' multiple="multiple"' : '';		// Check post if post is not empty		if (! empty($_POST))		{    			// Post data exists. Default is select has no options selected. 			$selected = array();			// Strip the [] from the name if multiple			$post_name = preg_replace('/\[\]/','',$name);			// Check for value(s) for this select item by name in $_POST array			if (isset($_POST[$post_name]))			{    				// Check if multiple values				if (is_array($_POST[$post_name]))				{    					// Extract each posted item					foreach ($_POST[$post_name] as $posted)					{    						// Override default values with posted values						$selected[] = $posted;					}				}				else				{    					// Single select value					$selected = array($_POST[$post_name]);				}			}		} 				$form = '<select name="'.$name.'"'.$extra.$multiple.">\n";		foreach ($options as $key => $val)		{			$key = (string) $key;			if (is_array($val) && ! empty($val))			{				$form .= '<optgroup label="'.$key.'">'."\n";				foreach ($val as $optgroup_key => $optgroup_val)				{					$sel = (in_array($optgroup_key, $selected)) ? ' selected="selected"' : '';					$form .= '<option value="'.$optgroup_key.'"'.$sel.'>'.(string) $optgroup_val."</option>\n";				}				$form .= '</optgroup>'."\n";			}			else			{				$sel = (in_array($key, $selected)) ? ' selected="selected"' : '';				$form .= '<option value="'.$key.'"'.$sel.'>'.(string) $val."</option>\n";			}		}		$form .= '</select>';		return $form;	}}/** * Set Radio * * Let's you set the selected value of a radio field via info in the POST array. * * Ici, on renvoie TRUE à la place de ' checked="checked"' et FALSE à la place de '' * On peut alors utiliser set_radio dans le tableau passé à la fonction form_radio * * @access	public * @param	string * @param	string * @param	bool * @return	bool */if ( ! function_exists('set_radio')){	function set_radio($field = '', $value = '', $default = FALSE)	{		if ( ! isset($_POST[$field]))		{			if (count($_POST) === 0 AND $default == TRUE)			{				return TRUE;			}			return FALSE;		}		$field = $_POST[$field];		if (is_array($field))		{			if ( ! in_array($value, $field))			{				return FALSE;			}		}		else		{			if (($field === '' OR $value === '') OR ($field != $value))			{				return FALSE;			}		}		return TRUE;	}}