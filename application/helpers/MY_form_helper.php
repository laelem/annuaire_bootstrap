<?php/** * Drop-down Menu * * Ici, on simule l'utilisation de set_select en allant chercher les valeurs postées * En effet, de par leur fonctionnement, form_dropdown ne peut pas être utilisé en même temps que set_select * Il suffit donc juste de renseigner les valeurs par défaut en 3ème paramètre * */ if ( ! function_exists('form_dropdown')){	function form_dropdown($name = '', $options = array(), $selected, $extra = '')	{		if(is_array($selected)){			$multiple = ' multiple="multiple"';		}		else{			$multiple = '';			$selected = array($selected);		}				$post_name = preg_replace('/\[\]/','',$name);		if (isset($_POST[$post_name]))		{    			if (is_array($_POST[$post_name]))			{    				$selected = array();				foreach ($_POST[$post_name] as $posted)				{    					$selected[] = $posted;				}			}			else			{    				$selected = array($_POST[$post_name]);			}		}		if ($extra != '') $extra = ' '.$extra;		$form = '<select name="'.$name.'"'.$extra.$multiple.">\n";		foreach ($options as $key => $val)		{			$key = (string) $key;			if (is_array($val) && !empty($val))			{				$form .= '<optgroup label="'.$key.'">'."\n";				foreach ($val as $optgroup_key => $optgroup_val)				{					$sel = (in_array($optgroup_key, $selected)) ? ' selected="selected"' : '';					$form .= '<option value="'.$optgroup_key.'"'.$sel.'>'.(string) $optgroup_val."</option>\n";				}				$form .= '</optgroup>'."\n";			}			else			{				$sel = (in_array($key, $selected)) ? ' selected="selected"' : '';				$form .= '<option value="'.$key.'"'.$sel.'>'.(string) $val."</option>\n";			}		}		$form .= '</select>';		return $form;	}}/** * Set Radio * * Let's you set the selected value of a radio field via info in the POST array. * * Ici, on renvoie TRUE à la place de ' checked="checked"' et FALSE à la place de '' * On peut alors utiliser set_radio dans le tableau passé à la fonction form_radio * */if ( ! function_exists('set_radio')){	function set_radio($field = '', $value = '', $default = FALSE)	{		if ( ! isset($_POST[$field]))		{			if (count($_POST) === 0 AND $default == TRUE)			{				return TRUE;			}			return FALSE;		}		$field = $_POST[$field];		if (is_array($field))		{			if ( ! in_array($value, $field))			{				return FALSE;			}		}		else		{			if (($field === '' OR $value === '') OR ($field != $value))			{				return FALSE;			}		}		return TRUE;	}}/** * Set Checkbox * * Let's you set the selected value of a checkbox via the value in the POST array. * If Form Validation is active it retrieves the info from the validation class * * Ici, on renvoie TRUE à la place de ' checked="checked"' et FALSE à la place de '' * On peut alors utiliser set_checkbox dans le tableau passé à la fonction form_checkbox */if ( ! function_exists('set_checkbox')){	function set_checkbox($field = '', $value = '', $default = FALSE)	{		if ( ! isset($_POST[$field]))		{			if (count($_POST) === 0 AND $default == TRUE)			{				return TRUE;			}			return FALSE;		}		$field = $_POST[$field];		if (is_array($field))		{			if ( ! in_array($value, $field))			{				return FALSE;			}		}		else		{			if (($field == '' OR $value == '') OR ($field != $value))			{				return FALSE;			}		}		return TRUE;	}}/** * display_input_form1 * * Fonction permettant l'affichage d'un input selon le style formulaire horizontal du bootstrap twitter * * @param	string			$label * @param	array			$data * @param	string/bool		$error * @return	string			$str */function display_input_form1($label, $data, $error){		$str = '';		if($error)		$str.= '<div class="control-group error">';	else		$str.= '<div class="control-group">';	$str.= form_label($label, $data['id'], array('class' => 'control-label'));	$str.= '<div class="controls">';	$str.= form_input($data);	if($error)		$str.= $error;	elseif(!empty($data['required']))		$str.= ' <span class="requis">(requis)</span>';	$str.= '</div>';	$str.= '</div>';		return $str;}